{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\my_projects\\\\next_ezfood\\\\pages\\\\_app.js\";\nimport App, { Container } from \"next/app\";\nimport React from \"react\";\nimport { initializeStore } from \"store/rootStore\";\nimport { Provider } from \"mobx-react\";\n\nvar MyMobxApp =\n/*#__PURE__*/\nfunction (_App) {\n  _inherits(MyMobxApp, _App);\n\n  _createClass(MyMobxApp, null, [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(appContext) {\n        var rootStore, appProps;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                rootStore = initializeStore();\n                appContext.ctx.rootStore = rootStore;\n                rootStore.UserStore.getUser();\n                _context.next = 5;\n                return App.getInitialProps(appContext);\n\n              case 5:\n                appProps = _context.sent;\n                return _context.abrupt(\"return\", _objectSpread({}, appProps, {\n                  initialMobxState: rootStore\n                }));\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  function MyMobxApp(props) {\n    var _this;\n\n    _classCallCheck(this, MyMobxApp);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MyMobxApp).call(this, props));\n    var isServer = typeof window === \"undefined\";\n    _this.rootStore = isServer ? props.initialMobxState : initializeStore(props.initialMobxState);\n    return _this;\n  }\n\n  _createClass(MyMobxApp, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {// this.rootStore.UserStore.getUser();\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.rootStore.WindowStore.getWindowParams();\n      window.addEventListener(\"resize\", function () {\n        _this2.rootStore.WindowStore.getWindowParams();\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var _this3 = this;\n\n      window.removeEventListener(\"resize\", function () {\n        _this3.rootStore.WindowStore.getWindowParams();\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          Component = _this$props.Component,\n          pageProps = _this$props.pageProps;\n      return React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(Provider, {\n        rootStore: this.rootStore,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(Component, _extends({}, pageProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return MyMobxApp;\n}(App);\n\nexport default MyMobxApp;","map":{"version":3,"sources":["D:\\my_projects\\next_ezfood\\pages\\_app.js"],"names":["App","Container","React","initializeStore","Provider","MyMobxApp","appContext","rootStore","ctx","UserStore","getUser","getInitialProps","appProps","initialMobxState","props","isServer","window","WindowStore","getWindowParams","addEventListener","removeEventListener","Component","pageProps"],"mappings":";;;;;;;;;;AAAA,OAAOA,GAAP,IAAcC,SAAd,QAA+B,UAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,QAAgC,iBAAhC;AACA,SAASC,QAAT,QAAyB,YAAzB;;IAEMC,S;;;;;;;;;;gDACyBC,U;;;;;;AACrBC,gBAAAA,S,GAAYJ,eAAe,E;AACjCG,gBAAAA,UAAU,CAACE,GAAX,CAAeD,SAAf,GAA2BA,SAA3B;AACAA,gBAAAA,SAAS,CAACE,SAAV,CAAoBC,OAApB;;uBACqBV,GAAG,CAACW,eAAJ,CAAoBL,UAApB,C;;;AAAjBM,gBAAAA,Q;mEAECA,Q;AACHC,kBAAAA,gBAAgB,EAAEN;;;;;;;;;;;;;;;;;;;AAItB,qBAAYO,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,mFAAMA,KAAN;AACA,QAAMC,QAAQ,GAAG,OAAOC,MAAP,KAAkB,WAAnC;AACA,UAAKT,SAAL,GAAiBQ,QAAQ,GACrBD,KAAK,CAACD,gBADe,GAErBV,eAAe,CAACW,KAAK,CAACD,gBAAP,CAFnB;AAHiB;AAMlB;;;;yCAEoB,CACnB;AACD;;;wCAEmB;AAAA;;AAClB,WAAKN,SAAL,CAAeU,WAAf,CAA2BC,eAA3B;AAEAF,MAAAA,MAAM,CAACG,gBAAP,CAAwB,QAAxB,EAAkC,YAAM;AACtC,QAAA,MAAI,CAACZ,SAAL,CAAeU,WAAf,CAA2BC,eAA3B;AACD,OAFD;AAGD;;;2CAEsB;AAAA;;AACrBF,MAAAA,MAAM,CAACI,mBAAP,CAA2B,QAA3B,EAAqC,YAAM;AACzC,QAAA,MAAI,CAACb,SAAL,CAAeU,WAAf,CAA2BC,eAA3B;AACD,OAFD;AAGD;;;6BAEQ;AAAA,wBAC0B,KAAKJ,KAD/B;AAAA,UACCO,SADD,eACCA,SADD;AAAA,UACYC,SADZ,eACYA,SADZ;AAEP,aACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AAAU,QAAA,SAAS,EAAE,KAAKf,SAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD,eAAee,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF,CADF,CADF;AAOD;;;;EA/CqBtB,G;;AAiDxB,eAAeK,SAAf","sourcesContent":["import App, { Container } from \"next/app\";\nimport React from \"react\";\nimport { initializeStore } from \"store/rootStore\";\nimport { Provider } from \"mobx-react\";\n\nclass MyMobxApp extends App {\n  static async getInitialProps(appContext) {\n    const rootStore = initializeStore();\n    appContext.ctx.rootStore = rootStore;\n    rootStore.UserStore.getUser();\n    let appProps = await App.getInitialProps(appContext);\n    return {\n      ...appProps,\n      initialMobxState: rootStore\n    };\n  }\n\n  constructor(props) {\n    super(props);\n    const isServer = typeof window === \"undefined\";\n    this.rootStore = isServer\n      ? props.initialMobxState\n      : initializeStore(props.initialMobxState);\n  }\n\n  componentWillMount() {\n    // this.rootStore.UserStore.getUser();\n  }\n\n  componentDidMount() {\n    this.rootStore.WindowStore.getWindowParams();\n\n    window.addEventListener(\"resize\", () => {\n      this.rootStore.WindowStore.getWindowParams();\n    });\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", () => {\n      this.rootStore.WindowStore.getWindowParams();\n    });\n  }\n\n  render() {\n    const { Component, pageProps } = this.props;\n    return (\n      <Container>\n        <Provider rootStore={this.rootStore}>\n          <Component {...pageProps} />\n        </Provider>\n      </Container>\n    );\n  }\n}\nexport default MyMobxApp;\n"]},"metadata":{},"sourceType":"module"}