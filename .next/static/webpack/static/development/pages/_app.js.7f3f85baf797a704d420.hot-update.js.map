{"version":3,"file":"static/webpack/static\\development\\pages\\_app.js.7f3f85baf797a704d420.hot-update.js","sources":["webpack:///./pages/_app.js"],"sourcesContent":["import App, { Container } from \"next/app\";\nimport React from \"react\";\nimport { initializeStore } from \"store/rootStore\";\nimport { Provider } from \"mobx-react\";\n\nclass MyMobxApp extends App {\n  static async getInitialProps(appContext) {\n    const rootStore = initializeStore();\n    appContext.ctx.rootStore = rootStore;\n    let appProps = await App.getInitialProps(appContext);\n    return {\n      ...appProps,\n      initialMobxState: rootStore\n    };\n  }\n\n  constructor(props) {\n    super(props);\n    const isServer = typeof window === \"undefined\";\n    this.rootStore = isServer\n      ? props.initialMobxState\n      : initializeStore(props.initialMobxState);\n  }\n\n  componentWillMount() {\n    this.rootStore.UserStore.getUser();\n  }\n\n  componentDidMount() {\n    this.rootStore.WindowStore.getWindowParams();\n    this.rootStore.UserStore.getUser();\n    window.addEventListener(\"resize\", () => {\n      this.rootStore.WindowStore.getWindowParams();\n    });\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", () => {\n      this.rootStore.WindowStore.getWindowParams();\n    });\n  }\n\n  render() {\n    const { Component, pageProps } = this.props;\n    return (\n      <Container>\n        <Provider rootStore={this.rootStore}>\n          <Component {...pageProps} />\n        </Provider>\n      </Container>\n    );\n  }\n}\nexport default MyMobxApp;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AACA;;;;;;AACA;AACA;;AACA;AACA;;AADA;AAEA;AACA;;;;;;;;;;;;;;;;;;;AAIA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AAHA;AAMA;AACA;;;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;;;AAEA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;AA9CA;AACA;AA+CA;;;;A","sourceRoot":""}